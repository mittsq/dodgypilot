#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6048962248150004469) {
   out_6048962248150004469[0] = 0;
   out_6048962248150004469[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6048962248150004469[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6048962248150004469[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6048962248150004469[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6048962248150004469[5] = -sin(in_vec[1]);
   out_6048962248150004469[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6048962248150004469[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6048962248150004469[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6048962248150004469[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6048962248150004469[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6048962248150004469[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6048962248150004469[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6048962248150004469[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6048962248150004469[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6048962248150004469[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6048962248150004469[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6048962248150004469[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1257180605249194379) {
   out_1257180605249194379[0] = delta_x[0] + nom_x[0];
   out_1257180605249194379[1] = delta_x[1] + nom_x[1];
   out_1257180605249194379[2] = delta_x[2] + nom_x[2];
   out_1257180605249194379[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1257180605249194379[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1257180605249194379[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1257180605249194379[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1257180605249194379[7] = delta_x[6] + nom_x[7];
   out_1257180605249194379[8] = delta_x[7] + nom_x[8];
   out_1257180605249194379[9] = delta_x[8] + nom_x[9];
   out_1257180605249194379[10] = delta_x[9] + nom_x[10];
   out_1257180605249194379[11] = delta_x[10] + nom_x[11];
   out_1257180605249194379[12] = delta_x[11] + nom_x[12];
   out_1257180605249194379[13] = delta_x[12] + nom_x[13];
   out_1257180605249194379[14] = delta_x[13] + nom_x[14];
   out_1257180605249194379[15] = delta_x[14] + nom_x[15];
   out_1257180605249194379[16] = delta_x[15] + nom_x[16];
   out_1257180605249194379[17] = delta_x[16] + nom_x[17];
   out_1257180605249194379[18] = delta_x[17] + nom_x[18];
   out_1257180605249194379[19] = delta_x[18] + nom_x[19];
   out_1257180605249194379[20] = delta_x[19] + nom_x[20];
   out_1257180605249194379[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7197721205927284659) {
   out_7197721205927284659[0] = -nom_x[0] + true_x[0];
   out_7197721205927284659[1] = -nom_x[1] + true_x[1];
   out_7197721205927284659[2] = -nom_x[2] + true_x[2];
   out_7197721205927284659[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7197721205927284659[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7197721205927284659[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7197721205927284659[6] = -nom_x[7] + true_x[7];
   out_7197721205927284659[7] = -nom_x[8] + true_x[8];
   out_7197721205927284659[8] = -nom_x[9] + true_x[9];
   out_7197721205927284659[9] = -nom_x[10] + true_x[10];
   out_7197721205927284659[10] = -nom_x[11] + true_x[11];
   out_7197721205927284659[11] = -nom_x[12] + true_x[12];
   out_7197721205927284659[12] = -nom_x[13] + true_x[13];
   out_7197721205927284659[13] = -nom_x[14] + true_x[14];
   out_7197721205927284659[14] = -nom_x[15] + true_x[15];
   out_7197721205927284659[15] = -nom_x[16] + true_x[16];
   out_7197721205927284659[16] = -nom_x[17] + true_x[17];
   out_7197721205927284659[17] = -nom_x[18] + true_x[18];
   out_7197721205927284659[18] = -nom_x[19] + true_x[19];
   out_7197721205927284659[19] = -nom_x[20] + true_x[20];
   out_7197721205927284659[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4220929202088409045) {
   out_4220929202088409045[0] = 1.0;
   out_4220929202088409045[1] = 0;
   out_4220929202088409045[2] = 0;
   out_4220929202088409045[3] = 0;
   out_4220929202088409045[4] = 0;
   out_4220929202088409045[5] = 0;
   out_4220929202088409045[6] = 0;
   out_4220929202088409045[7] = 0;
   out_4220929202088409045[8] = 0;
   out_4220929202088409045[9] = 0;
   out_4220929202088409045[10] = 0;
   out_4220929202088409045[11] = 0;
   out_4220929202088409045[12] = 0;
   out_4220929202088409045[13] = 0;
   out_4220929202088409045[14] = 0;
   out_4220929202088409045[15] = 0;
   out_4220929202088409045[16] = 0;
   out_4220929202088409045[17] = 0;
   out_4220929202088409045[18] = 0;
   out_4220929202088409045[19] = 0;
   out_4220929202088409045[20] = 0;
   out_4220929202088409045[21] = 0;
   out_4220929202088409045[22] = 1.0;
   out_4220929202088409045[23] = 0;
   out_4220929202088409045[24] = 0;
   out_4220929202088409045[25] = 0;
   out_4220929202088409045[26] = 0;
   out_4220929202088409045[27] = 0;
   out_4220929202088409045[28] = 0;
   out_4220929202088409045[29] = 0;
   out_4220929202088409045[30] = 0;
   out_4220929202088409045[31] = 0;
   out_4220929202088409045[32] = 0;
   out_4220929202088409045[33] = 0;
   out_4220929202088409045[34] = 0;
   out_4220929202088409045[35] = 0;
   out_4220929202088409045[36] = 0;
   out_4220929202088409045[37] = 0;
   out_4220929202088409045[38] = 0;
   out_4220929202088409045[39] = 0;
   out_4220929202088409045[40] = 0;
   out_4220929202088409045[41] = 0;
   out_4220929202088409045[42] = 0;
   out_4220929202088409045[43] = 0;
   out_4220929202088409045[44] = 1.0;
   out_4220929202088409045[45] = 0;
   out_4220929202088409045[46] = 0;
   out_4220929202088409045[47] = 0;
   out_4220929202088409045[48] = 0;
   out_4220929202088409045[49] = 0;
   out_4220929202088409045[50] = 0;
   out_4220929202088409045[51] = 0;
   out_4220929202088409045[52] = 0;
   out_4220929202088409045[53] = 0;
   out_4220929202088409045[54] = 0;
   out_4220929202088409045[55] = 0;
   out_4220929202088409045[56] = 0;
   out_4220929202088409045[57] = 0;
   out_4220929202088409045[58] = 0;
   out_4220929202088409045[59] = 0;
   out_4220929202088409045[60] = 0;
   out_4220929202088409045[61] = 0;
   out_4220929202088409045[62] = 0;
   out_4220929202088409045[63] = 0;
   out_4220929202088409045[64] = 0;
   out_4220929202088409045[65] = 0;
   out_4220929202088409045[66] = -0.5*state[4];
   out_4220929202088409045[67] = -0.5*state[5];
   out_4220929202088409045[68] = -0.5*state[6];
   out_4220929202088409045[69] = 0;
   out_4220929202088409045[70] = 0;
   out_4220929202088409045[71] = 0;
   out_4220929202088409045[72] = 0;
   out_4220929202088409045[73] = 0;
   out_4220929202088409045[74] = 0;
   out_4220929202088409045[75] = 0;
   out_4220929202088409045[76] = 0;
   out_4220929202088409045[77] = 0;
   out_4220929202088409045[78] = 0;
   out_4220929202088409045[79] = 0;
   out_4220929202088409045[80] = 0;
   out_4220929202088409045[81] = 0;
   out_4220929202088409045[82] = 0;
   out_4220929202088409045[83] = 0;
   out_4220929202088409045[84] = 0;
   out_4220929202088409045[85] = 0;
   out_4220929202088409045[86] = 0;
   out_4220929202088409045[87] = 0.5*state[3];
   out_4220929202088409045[88] = 0.5*state[6];
   out_4220929202088409045[89] = -0.5*state[5];
   out_4220929202088409045[90] = 0;
   out_4220929202088409045[91] = 0;
   out_4220929202088409045[92] = 0;
   out_4220929202088409045[93] = 0;
   out_4220929202088409045[94] = 0;
   out_4220929202088409045[95] = 0;
   out_4220929202088409045[96] = 0;
   out_4220929202088409045[97] = 0;
   out_4220929202088409045[98] = 0;
   out_4220929202088409045[99] = 0;
   out_4220929202088409045[100] = 0;
   out_4220929202088409045[101] = 0;
   out_4220929202088409045[102] = 0;
   out_4220929202088409045[103] = 0;
   out_4220929202088409045[104] = 0;
   out_4220929202088409045[105] = 0;
   out_4220929202088409045[106] = 0;
   out_4220929202088409045[107] = 0;
   out_4220929202088409045[108] = -0.5*state[6];
   out_4220929202088409045[109] = 0.5*state[3];
   out_4220929202088409045[110] = 0.5*state[4];
   out_4220929202088409045[111] = 0;
   out_4220929202088409045[112] = 0;
   out_4220929202088409045[113] = 0;
   out_4220929202088409045[114] = 0;
   out_4220929202088409045[115] = 0;
   out_4220929202088409045[116] = 0;
   out_4220929202088409045[117] = 0;
   out_4220929202088409045[118] = 0;
   out_4220929202088409045[119] = 0;
   out_4220929202088409045[120] = 0;
   out_4220929202088409045[121] = 0;
   out_4220929202088409045[122] = 0;
   out_4220929202088409045[123] = 0;
   out_4220929202088409045[124] = 0;
   out_4220929202088409045[125] = 0;
   out_4220929202088409045[126] = 0;
   out_4220929202088409045[127] = 0;
   out_4220929202088409045[128] = 0;
   out_4220929202088409045[129] = 0.5*state[5];
   out_4220929202088409045[130] = -0.5*state[4];
   out_4220929202088409045[131] = 0.5*state[3];
   out_4220929202088409045[132] = 0;
   out_4220929202088409045[133] = 0;
   out_4220929202088409045[134] = 0;
   out_4220929202088409045[135] = 0;
   out_4220929202088409045[136] = 0;
   out_4220929202088409045[137] = 0;
   out_4220929202088409045[138] = 0;
   out_4220929202088409045[139] = 0;
   out_4220929202088409045[140] = 0;
   out_4220929202088409045[141] = 0;
   out_4220929202088409045[142] = 0;
   out_4220929202088409045[143] = 0;
   out_4220929202088409045[144] = 0;
   out_4220929202088409045[145] = 0;
   out_4220929202088409045[146] = 0;
   out_4220929202088409045[147] = 0;
   out_4220929202088409045[148] = 0;
   out_4220929202088409045[149] = 0;
   out_4220929202088409045[150] = 0;
   out_4220929202088409045[151] = 0;
   out_4220929202088409045[152] = 0;
   out_4220929202088409045[153] = 1.0;
   out_4220929202088409045[154] = 0;
   out_4220929202088409045[155] = 0;
   out_4220929202088409045[156] = 0;
   out_4220929202088409045[157] = 0;
   out_4220929202088409045[158] = 0;
   out_4220929202088409045[159] = 0;
   out_4220929202088409045[160] = 0;
   out_4220929202088409045[161] = 0;
   out_4220929202088409045[162] = 0;
   out_4220929202088409045[163] = 0;
   out_4220929202088409045[164] = 0;
   out_4220929202088409045[165] = 0;
   out_4220929202088409045[166] = 0;
   out_4220929202088409045[167] = 0;
   out_4220929202088409045[168] = 0;
   out_4220929202088409045[169] = 0;
   out_4220929202088409045[170] = 0;
   out_4220929202088409045[171] = 0;
   out_4220929202088409045[172] = 0;
   out_4220929202088409045[173] = 0;
   out_4220929202088409045[174] = 0;
   out_4220929202088409045[175] = 1.0;
   out_4220929202088409045[176] = 0;
   out_4220929202088409045[177] = 0;
   out_4220929202088409045[178] = 0;
   out_4220929202088409045[179] = 0;
   out_4220929202088409045[180] = 0;
   out_4220929202088409045[181] = 0;
   out_4220929202088409045[182] = 0;
   out_4220929202088409045[183] = 0;
   out_4220929202088409045[184] = 0;
   out_4220929202088409045[185] = 0;
   out_4220929202088409045[186] = 0;
   out_4220929202088409045[187] = 0;
   out_4220929202088409045[188] = 0;
   out_4220929202088409045[189] = 0;
   out_4220929202088409045[190] = 0;
   out_4220929202088409045[191] = 0;
   out_4220929202088409045[192] = 0;
   out_4220929202088409045[193] = 0;
   out_4220929202088409045[194] = 0;
   out_4220929202088409045[195] = 0;
   out_4220929202088409045[196] = 0;
   out_4220929202088409045[197] = 1.0;
   out_4220929202088409045[198] = 0;
   out_4220929202088409045[199] = 0;
   out_4220929202088409045[200] = 0;
   out_4220929202088409045[201] = 0;
   out_4220929202088409045[202] = 0;
   out_4220929202088409045[203] = 0;
   out_4220929202088409045[204] = 0;
   out_4220929202088409045[205] = 0;
   out_4220929202088409045[206] = 0;
   out_4220929202088409045[207] = 0;
   out_4220929202088409045[208] = 0;
   out_4220929202088409045[209] = 0;
   out_4220929202088409045[210] = 0;
   out_4220929202088409045[211] = 0;
   out_4220929202088409045[212] = 0;
   out_4220929202088409045[213] = 0;
   out_4220929202088409045[214] = 0;
   out_4220929202088409045[215] = 0;
   out_4220929202088409045[216] = 0;
   out_4220929202088409045[217] = 0;
   out_4220929202088409045[218] = 0;
   out_4220929202088409045[219] = 1.0;
   out_4220929202088409045[220] = 0;
   out_4220929202088409045[221] = 0;
   out_4220929202088409045[222] = 0;
   out_4220929202088409045[223] = 0;
   out_4220929202088409045[224] = 0;
   out_4220929202088409045[225] = 0;
   out_4220929202088409045[226] = 0;
   out_4220929202088409045[227] = 0;
   out_4220929202088409045[228] = 0;
   out_4220929202088409045[229] = 0;
   out_4220929202088409045[230] = 0;
   out_4220929202088409045[231] = 0;
   out_4220929202088409045[232] = 0;
   out_4220929202088409045[233] = 0;
   out_4220929202088409045[234] = 0;
   out_4220929202088409045[235] = 0;
   out_4220929202088409045[236] = 0;
   out_4220929202088409045[237] = 0;
   out_4220929202088409045[238] = 0;
   out_4220929202088409045[239] = 0;
   out_4220929202088409045[240] = 0;
   out_4220929202088409045[241] = 1.0;
   out_4220929202088409045[242] = 0;
   out_4220929202088409045[243] = 0;
   out_4220929202088409045[244] = 0;
   out_4220929202088409045[245] = 0;
   out_4220929202088409045[246] = 0;
   out_4220929202088409045[247] = 0;
   out_4220929202088409045[248] = 0;
   out_4220929202088409045[249] = 0;
   out_4220929202088409045[250] = 0;
   out_4220929202088409045[251] = 0;
   out_4220929202088409045[252] = 0;
   out_4220929202088409045[253] = 0;
   out_4220929202088409045[254] = 0;
   out_4220929202088409045[255] = 0;
   out_4220929202088409045[256] = 0;
   out_4220929202088409045[257] = 0;
   out_4220929202088409045[258] = 0;
   out_4220929202088409045[259] = 0;
   out_4220929202088409045[260] = 0;
   out_4220929202088409045[261] = 0;
   out_4220929202088409045[262] = 0;
   out_4220929202088409045[263] = 1.0;
   out_4220929202088409045[264] = 0;
   out_4220929202088409045[265] = 0;
   out_4220929202088409045[266] = 0;
   out_4220929202088409045[267] = 0;
   out_4220929202088409045[268] = 0;
   out_4220929202088409045[269] = 0;
   out_4220929202088409045[270] = 0;
   out_4220929202088409045[271] = 0;
   out_4220929202088409045[272] = 0;
   out_4220929202088409045[273] = 0;
   out_4220929202088409045[274] = 0;
   out_4220929202088409045[275] = 0;
   out_4220929202088409045[276] = 0;
   out_4220929202088409045[277] = 0;
   out_4220929202088409045[278] = 0;
   out_4220929202088409045[279] = 0;
   out_4220929202088409045[280] = 0;
   out_4220929202088409045[281] = 0;
   out_4220929202088409045[282] = 0;
   out_4220929202088409045[283] = 0;
   out_4220929202088409045[284] = 0;
   out_4220929202088409045[285] = 1.0;
   out_4220929202088409045[286] = 0;
   out_4220929202088409045[287] = 0;
   out_4220929202088409045[288] = 0;
   out_4220929202088409045[289] = 0;
   out_4220929202088409045[290] = 0;
   out_4220929202088409045[291] = 0;
   out_4220929202088409045[292] = 0;
   out_4220929202088409045[293] = 0;
   out_4220929202088409045[294] = 0;
   out_4220929202088409045[295] = 0;
   out_4220929202088409045[296] = 0;
   out_4220929202088409045[297] = 0;
   out_4220929202088409045[298] = 0;
   out_4220929202088409045[299] = 0;
   out_4220929202088409045[300] = 0;
   out_4220929202088409045[301] = 0;
   out_4220929202088409045[302] = 0;
   out_4220929202088409045[303] = 0;
   out_4220929202088409045[304] = 0;
   out_4220929202088409045[305] = 0;
   out_4220929202088409045[306] = 0;
   out_4220929202088409045[307] = 1.0;
   out_4220929202088409045[308] = 0;
   out_4220929202088409045[309] = 0;
   out_4220929202088409045[310] = 0;
   out_4220929202088409045[311] = 0;
   out_4220929202088409045[312] = 0;
   out_4220929202088409045[313] = 0;
   out_4220929202088409045[314] = 0;
   out_4220929202088409045[315] = 0;
   out_4220929202088409045[316] = 0;
   out_4220929202088409045[317] = 0;
   out_4220929202088409045[318] = 0;
   out_4220929202088409045[319] = 0;
   out_4220929202088409045[320] = 0;
   out_4220929202088409045[321] = 0;
   out_4220929202088409045[322] = 0;
   out_4220929202088409045[323] = 0;
   out_4220929202088409045[324] = 0;
   out_4220929202088409045[325] = 0;
   out_4220929202088409045[326] = 0;
   out_4220929202088409045[327] = 0;
   out_4220929202088409045[328] = 0;
   out_4220929202088409045[329] = 1.0;
   out_4220929202088409045[330] = 0;
   out_4220929202088409045[331] = 0;
   out_4220929202088409045[332] = 0;
   out_4220929202088409045[333] = 0;
   out_4220929202088409045[334] = 0;
   out_4220929202088409045[335] = 0;
   out_4220929202088409045[336] = 0;
   out_4220929202088409045[337] = 0;
   out_4220929202088409045[338] = 0;
   out_4220929202088409045[339] = 0;
   out_4220929202088409045[340] = 0;
   out_4220929202088409045[341] = 0;
   out_4220929202088409045[342] = 0;
   out_4220929202088409045[343] = 0;
   out_4220929202088409045[344] = 0;
   out_4220929202088409045[345] = 0;
   out_4220929202088409045[346] = 0;
   out_4220929202088409045[347] = 0;
   out_4220929202088409045[348] = 0;
   out_4220929202088409045[349] = 0;
   out_4220929202088409045[350] = 0;
   out_4220929202088409045[351] = 1.0;
   out_4220929202088409045[352] = 0;
   out_4220929202088409045[353] = 0;
   out_4220929202088409045[354] = 0;
   out_4220929202088409045[355] = 0;
   out_4220929202088409045[356] = 0;
   out_4220929202088409045[357] = 0;
   out_4220929202088409045[358] = 0;
   out_4220929202088409045[359] = 0;
   out_4220929202088409045[360] = 0;
   out_4220929202088409045[361] = 0;
   out_4220929202088409045[362] = 0;
   out_4220929202088409045[363] = 0;
   out_4220929202088409045[364] = 0;
   out_4220929202088409045[365] = 0;
   out_4220929202088409045[366] = 0;
   out_4220929202088409045[367] = 0;
   out_4220929202088409045[368] = 0;
   out_4220929202088409045[369] = 0;
   out_4220929202088409045[370] = 0;
   out_4220929202088409045[371] = 0;
   out_4220929202088409045[372] = 0;
   out_4220929202088409045[373] = 1.0;
   out_4220929202088409045[374] = 0;
   out_4220929202088409045[375] = 0;
   out_4220929202088409045[376] = 0;
   out_4220929202088409045[377] = 0;
   out_4220929202088409045[378] = 0;
   out_4220929202088409045[379] = 0;
   out_4220929202088409045[380] = 0;
   out_4220929202088409045[381] = 0;
   out_4220929202088409045[382] = 0;
   out_4220929202088409045[383] = 0;
   out_4220929202088409045[384] = 0;
   out_4220929202088409045[385] = 0;
   out_4220929202088409045[386] = 0;
   out_4220929202088409045[387] = 0;
   out_4220929202088409045[388] = 0;
   out_4220929202088409045[389] = 0;
   out_4220929202088409045[390] = 0;
   out_4220929202088409045[391] = 0;
   out_4220929202088409045[392] = 0;
   out_4220929202088409045[393] = 0;
   out_4220929202088409045[394] = 0;
   out_4220929202088409045[395] = 1.0;
   out_4220929202088409045[396] = 0;
   out_4220929202088409045[397] = 0;
   out_4220929202088409045[398] = 0;
   out_4220929202088409045[399] = 0;
   out_4220929202088409045[400] = 0;
   out_4220929202088409045[401] = 0;
   out_4220929202088409045[402] = 0;
   out_4220929202088409045[403] = 0;
   out_4220929202088409045[404] = 0;
   out_4220929202088409045[405] = 0;
   out_4220929202088409045[406] = 0;
   out_4220929202088409045[407] = 0;
   out_4220929202088409045[408] = 0;
   out_4220929202088409045[409] = 0;
   out_4220929202088409045[410] = 0;
   out_4220929202088409045[411] = 0;
   out_4220929202088409045[412] = 0;
   out_4220929202088409045[413] = 0;
   out_4220929202088409045[414] = 0;
   out_4220929202088409045[415] = 0;
   out_4220929202088409045[416] = 0;
   out_4220929202088409045[417] = 1.0;
   out_4220929202088409045[418] = 0;
   out_4220929202088409045[419] = 0;
   out_4220929202088409045[420] = 0;
   out_4220929202088409045[421] = 0;
   out_4220929202088409045[422] = 0;
   out_4220929202088409045[423] = 0;
   out_4220929202088409045[424] = 0;
   out_4220929202088409045[425] = 0;
   out_4220929202088409045[426] = 0;
   out_4220929202088409045[427] = 0;
   out_4220929202088409045[428] = 0;
   out_4220929202088409045[429] = 0;
   out_4220929202088409045[430] = 0;
   out_4220929202088409045[431] = 0;
   out_4220929202088409045[432] = 0;
   out_4220929202088409045[433] = 0;
   out_4220929202088409045[434] = 0;
   out_4220929202088409045[435] = 0;
   out_4220929202088409045[436] = 0;
   out_4220929202088409045[437] = 0;
   out_4220929202088409045[438] = 0;
   out_4220929202088409045[439] = 1.0;
   out_4220929202088409045[440] = 0;
   out_4220929202088409045[441] = 0;
   out_4220929202088409045[442] = 0;
   out_4220929202088409045[443] = 0;
   out_4220929202088409045[444] = 0;
   out_4220929202088409045[445] = 0;
   out_4220929202088409045[446] = 0;
   out_4220929202088409045[447] = 0;
   out_4220929202088409045[448] = 0;
   out_4220929202088409045[449] = 0;
   out_4220929202088409045[450] = 0;
   out_4220929202088409045[451] = 0;
   out_4220929202088409045[452] = 0;
   out_4220929202088409045[453] = 0;
   out_4220929202088409045[454] = 0;
   out_4220929202088409045[455] = 0;
   out_4220929202088409045[456] = 0;
   out_4220929202088409045[457] = 0;
   out_4220929202088409045[458] = 0;
   out_4220929202088409045[459] = 0;
   out_4220929202088409045[460] = 0;
   out_4220929202088409045[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3310092106447953143) {
   out_3310092106447953143[0] = dt*state[7] + state[0];
   out_3310092106447953143[1] = dt*state[8] + state[1];
   out_3310092106447953143[2] = dt*state[9] + state[2];
   out_3310092106447953143[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3310092106447953143[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3310092106447953143[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3310092106447953143[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3310092106447953143[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3310092106447953143[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3310092106447953143[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3310092106447953143[10] = state[10];
   out_3310092106447953143[11] = state[11];
   out_3310092106447953143[12] = state[12];
   out_3310092106447953143[13] = state[13];
   out_3310092106447953143[14] = state[14];
   out_3310092106447953143[15] = state[15];
   out_3310092106447953143[16] = state[16];
   out_3310092106447953143[17] = state[17];
   out_3310092106447953143[18] = state[18];
   out_3310092106447953143[19] = state[19];
   out_3310092106447953143[20] = state[20];
   out_3310092106447953143[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8347382080481440720) {
   out_8347382080481440720[0] = 1;
   out_8347382080481440720[1] = 0;
   out_8347382080481440720[2] = 0;
   out_8347382080481440720[3] = 0;
   out_8347382080481440720[4] = 0;
   out_8347382080481440720[5] = 0;
   out_8347382080481440720[6] = dt;
   out_8347382080481440720[7] = 0;
   out_8347382080481440720[8] = 0;
   out_8347382080481440720[9] = 0;
   out_8347382080481440720[10] = 0;
   out_8347382080481440720[11] = 0;
   out_8347382080481440720[12] = 0;
   out_8347382080481440720[13] = 0;
   out_8347382080481440720[14] = 0;
   out_8347382080481440720[15] = 0;
   out_8347382080481440720[16] = 0;
   out_8347382080481440720[17] = 0;
   out_8347382080481440720[18] = 0;
   out_8347382080481440720[19] = 0;
   out_8347382080481440720[20] = 0;
   out_8347382080481440720[21] = 0;
   out_8347382080481440720[22] = 1;
   out_8347382080481440720[23] = 0;
   out_8347382080481440720[24] = 0;
   out_8347382080481440720[25] = 0;
   out_8347382080481440720[26] = 0;
   out_8347382080481440720[27] = 0;
   out_8347382080481440720[28] = dt;
   out_8347382080481440720[29] = 0;
   out_8347382080481440720[30] = 0;
   out_8347382080481440720[31] = 0;
   out_8347382080481440720[32] = 0;
   out_8347382080481440720[33] = 0;
   out_8347382080481440720[34] = 0;
   out_8347382080481440720[35] = 0;
   out_8347382080481440720[36] = 0;
   out_8347382080481440720[37] = 0;
   out_8347382080481440720[38] = 0;
   out_8347382080481440720[39] = 0;
   out_8347382080481440720[40] = 0;
   out_8347382080481440720[41] = 0;
   out_8347382080481440720[42] = 0;
   out_8347382080481440720[43] = 0;
   out_8347382080481440720[44] = 1;
   out_8347382080481440720[45] = 0;
   out_8347382080481440720[46] = 0;
   out_8347382080481440720[47] = 0;
   out_8347382080481440720[48] = 0;
   out_8347382080481440720[49] = 0;
   out_8347382080481440720[50] = dt;
   out_8347382080481440720[51] = 0;
   out_8347382080481440720[52] = 0;
   out_8347382080481440720[53] = 0;
   out_8347382080481440720[54] = 0;
   out_8347382080481440720[55] = 0;
   out_8347382080481440720[56] = 0;
   out_8347382080481440720[57] = 0;
   out_8347382080481440720[58] = 0;
   out_8347382080481440720[59] = 0;
   out_8347382080481440720[60] = 0;
   out_8347382080481440720[61] = 0;
   out_8347382080481440720[62] = 0;
   out_8347382080481440720[63] = 0;
   out_8347382080481440720[64] = 0;
   out_8347382080481440720[65] = 0;
   out_8347382080481440720[66] = 1;
   out_8347382080481440720[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8347382080481440720[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8347382080481440720[69] = 0;
   out_8347382080481440720[70] = 0;
   out_8347382080481440720[71] = 0;
   out_8347382080481440720[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8347382080481440720[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8347382080481440720[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8347382080481440720[75] = 0;
   out_8347382080481440720[76] = 0;
   out_8347382080481440720[77] = 0;
   out_8347382080481440720[78] = 0;
   out_8347382080481440720[79] = 0;
   out_8347382080481440720[80] = 0;
   out_8347382080481440720[81] = 0;
   out_8347382080481440720[82] = 0;
   out_8347382080481440720[83] = 0;
   out_8347382080481440720[84] = 0;
   out_8347382080481440720[85] = 0;
   out_8347382080481440720[86] = 0;
   out_8347382080481440720[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8347382080481440720[88] = 1;
   out_8347382080481440720[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8347382080481440720[90] = 0;
   out_8347382080481440720[91] = 0;
   out_8347382080481440720[92] = 0;
   out_8347382080481440720[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8347382080481440720[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8347382080481440720[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8347382080481440720[96] = 0;
   out_8347382080481440720[97] = 0;
   out_8347382080481440720[98] = 0;
   out_8347382080481440720[99] = 0;
   out_8347382080481440720[100] = 0;
   out_8347382080481440720[101] = 0;
   out_8347382080481440720[102] = 0;
   out_8347382080481440720[103] = 0;
   out_8347382080481440720[104] = 0;
   out_8347382080481440720[105] = 0;
   out_8347382080481440720[106] = 0;
   out_8347382080481440720[107] = 0;
   out_8347382080481440720[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8347382080481440720[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8347382080481440720[110] = 1;
   out_8347382080481440720[111] = 0;
   out_8347382080481440720[112] = 0;
   out_8347382080481440720[113] = 0;
   out_8347382080481440720[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8347382080481440720[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8347382080481440720[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8347382080481440720[117] = 0;
   out_8347382080481440720[118] = 0;
   out_8347382080481440720[119] = 0;
   out_8347382080481440720[120] = 0;
   out_8347382080481440720[121] = 0;
   out_8347382080481440720[122] = 0;
   out_8347382080481440720[123] = 0;
   out_8347382080481440720[124] = 0;
   out_8347382080481440720[125] = 0;
   out_8347382080481440720[126] = 0;
   out_8347382080481440720[127] = 0;
   out_8347382080481440720[128] = 0;
   out_8347382080481440720[129] = 0;
   out_8347382080481440720[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8347382080481440720[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8347382080481440720[132] = 1;
   out_8347382080481440720[133] = 0;
   out_8347382080481440720[134] = 0;
   out_8347382080481440720[135] = 0;
   out_8347382080481440720[136] = 0;
   out_8347382080481440720[137] = 0;
   out_8347382080481440720[138] = 0;
   out_8347382080481440720[139] = 0;
   out_8347382080481440720[140] = 0;
   out_8347382080481440720[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8347382080481440720[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8347382080481440720[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8347382080481440720[144] = 0;
   out_8347382080481440720[145] = 0;
   out_8347382080481440720[146] = 0;
   out_8347382080481440720[147] = 0;
   out_8347382080481440720[148] = 0;
   out_8347382080481440720[149] = 0;
   out_8347382080481440720[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8347382080481440720[151] = 0;
   out_8347382080481440720[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8347382080481440720[153] = 0;
   out_8347382080481440720[154] = 1;
   out_8347382080481440720[155] = 0;
   out_8347382080481440720[156] = 0;
   out_8347382080481440720[157] = 0;
   out_8347382080481440720[158] = 0;
   out_8347382080481440720[159] = 0;
   out_8347382080481440720[160] = 0;
   out_8347382080481440720[161] = 0;
   out_8347382080481440720[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8347382080481440720[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8347382080481440720[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8347382080481440720[165] = 0;
   out_8347382080481440720[166] = 0;
   out_8347382080481440720[167] = 0;
   out_8347382080481440720[168] = 0;
   out_8347382080481440720[169] = 0;
   out_8347382080481440720[170] = 0;
   out_8347382080481440720[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8347382080481440720[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8347382080481440720[173] = 0;
   out_8347382080481440720[174] = 0;
   out_8347382080481440720[175] = 0;
   out_8347382080481440720[176] = 1;
   out_8347382080481440720[177] = 0;
   out_8347382080481440720[178] = 0;
   out_8347382080481440720[179] = 0;
   out_8347382080481440720[180] = 0;
   out_8347382080481440720[181] = 0;
   out_8347382080481440720[182] = 0;
   out_8347382080481440720[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8347382080481440720[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8347382080481440720[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8347382080481440720[186] = 0;
   out_8347382080481440720[187] = 0;
   out_8347382080481440720[188] = 0;
   out_8347382080481440720[189] = 0;
   out_8347382080481440720[190] = 0;
   out_8347382080481440720[191] = 0;
   out_8347382080481440720[192] = 0;
   out_8347382080481440720[193] = 0;
   out_8347382080481440720[194] = 0;
   out_8347382080481440720[195] = 0;
   out_8347382080481440720[196] = 0;
   out_8347382080481440720[197] = 0;
   out_8347382080481440720[198] = 1;
   out_8347382080481440720[199] = 0;
   out_8347382080481440720[200] = 0;
   out_8347382080481440720[201] = 0;
   out_8347382080481440720[202] = 0;
   out_8347382080481440720[203] = 0;
   out_8347382080481440720[204] = 0;
   out_8347382080481440720[205] = 0;
   out_8347382080481440720[206] = 0;
   out_8347382080481440720[207] = 0;
   out_8347382080481440720[208] = 0;
   out_8347382080481440720[209] = 0;
   out_8347382080481440720[210] = 0;
   out_8347382080481440720[211] = 0;
   out_8347382080481440720[212] = 0;
   out_8347382080481440720[213] = 0;
   out_8347382080481440720[214] = 0;
   out_8347382080481440720[215] = 0;
   out_8347382080481440720[216] = 0;
   out_8347382080481440720[217] = 0;
   out_8347382080481440720[218] = 0;
   out_8347382080481440720[219] = 0;
   out_8347382080481440720[220] = 1;
   out_8347382080481440720[221] = 0;
   out_8347382080481440720[222] = 0;
   out_8347382080481440720[223] = 0;
   out_8347382080481440720[224] = 0;
   out_8347382080481440720[225] = 0;
   out_8347382080481440720[226] = 0;
   out_8347382080481440720[227] = 0;
   out_8347382080481440720[228] = 0;
   out_8347382080481440720[229] = 0;
   out_8347382080481440720[230] = 0;
   out_8347382080481440720[231] = 0;
   out_8347382080481440720[232] = 0;
   out_8347382080481440720[233] = 0;
   out_8347382080481440720[234] = 0;
   out_8347382080481440720[235] = 0;
   out_8347382080481440720[236] = 0;
   out_8347382080481440720[237] = 0;
   out_8347382080481440720[238] = 0;
   out_8347382080481440720[239] = 0;
   out_8347382080481440720[240] = 0;
   out_8347382080481440720[241] = 0;
   out_8347382080481440720[242] = 1;
   out_8347382080481440720[243] = 0;
   out_8347382080481440720[244] = 0;
   out_8347382080481440720[245] = 0;
   out_8347382080481440720[246] = 0;
   out_8347382080481440720[247] = 0;
   out_8347382080481440720[248] = 0;
   out_8347382080481440720[249] = 0;
   out_8347382080481440720[250] = 0;
   out_8347382080481440720[251] = 0;
   out_8347382080481440720[252] = 0;
   out_8347382080481440720[253] = 0;
   out_8347382080481440720[254] = 0;
   out_8347382080481440720[255] = 0;
   out_8347382080481440720[256] = 0;
   out_8347382080481440720[257] = 0;
   out_8347382080481440720[258] = 0;
   out_8347382080481440720[259] = 0;
   out_8347382080481440720[260] = 0;
   out_8347382080481440720[261] = 0;
   out_8347382080481440720[262] = 0;
   out_8347382080481440720[263] = 0;
   out_8347382080481440720[264] = 1;
   out_8347382080481440720[265] = 0;
   out_8347382080481440720[266] = 0;
   out_8347382080481440720[267] = 0;
   out_8347382080481440720[268] = 0;
   out_8347382080481440720[269] = 0;
   out_8347382080481440720[270] = 0;
   out_8347382080481440720[271] = 0;
   out_8347382080481440720[272] = 0;
   out_8347382080481440720[273] = 0;
   out_8347382080481440720[274] = 0;
   out_8347382080481440720[275] = 0;
   out_8347382080481440720[276] = 0;
   out_8347382080481440720[277] = 0;
   out_8347382080481440720[278] = 0;
   out_8347382080481440720[279] = 0;
   out_8347382080481440720[280] = 0;
   out_8347382080481440720[281] = 0;
   out_8347382080481440720[282] = 0;
   out_8347382080481440720[283] = 0;
   out_8347382080481440720[284] = 0;
   out_8347382080481440720[285] = 0;
   out_8347382080481440720[286] = 1;
   out_8347382080481440720[287] = 0;
   out_8347382080481440720[288] = 0;
   out_8347382080481440720[289] = 0;
   out_8347382080481440720[290] = 0;
   out_8347382080481440720[291] = 0;
   out_8347382080481440720[292] = 0;
   out_8347382080481440720[293] = 0;
   out_8347382080481440720[294] = 0;
   out_8347382080481440720[295] = 0;
   out_8347382080481440720[296] = 0;
   out_8347382080481440720[297] = 0;
   out_8347382080481440720[298] = 0;
   out_8347382080481440720[299] = 0;
   out_8347382080481440720[300] = 0;
   out_8347382080481440720[301] = 0;
   out_8347382080481440720[302] = 0;
   out_8347382080481440720[303] = 0;
   out_8347382080481440720[304] = 0;
   out_8347382080481440720[305] = 0;
   out_8347382080481440720[306] = 0;
   out_8347382080481440720[307] = 0;
   out_8347382080481440720[308] = 1;
   out_8347382080481440720[309] = 0;
   out_8347382080481440720[310] = 0;
   out_8347382080481440720[311] = 0;
   out_8347382080481440720[312] = 0;
   out_8347382080481440720[313] = 0;
   out_8347382080481440720[314] = 0;
   out_8347382080481440720[315] = 0;
   out_8347382080481440720[316] = 0;
   out_8347382080481440720[317] = 0;
   out_8347382080481440720[318] = 0;
   out_8347382080481440720[319] = 0;
   out_8347382080481440720[320] = 0;
   out_8347382080481440720[321] = 0;
   out_8347382080481440720[322] = 0;
   out_8347382080481440720[323] = 0;
   out_8347382080481440720[324] = 0;
   out_8347382080481440720[325] = 0;
   out_8347382080481440720[326] = 0;
   out_8347382080481440720[327] = 0;
   out_8347382080481440720[328] = 0;
   out_8347382080481440720[329] = 0;
   out_8347382080481440720[330] = 1;
   out_8347382080481440720[331] = 0;
   out_8347382080481440720[332] = 0;
   out_8347382080481440720[333] = 0;
   out_8347382080481440720[334] = 0;
   out_8347382080481440720[335] = 0;
   out_8347382080481440720[336] = 0;
   out_8347382080481440720[337] = 0;
   out_8347382080481440720[338] = 0;
   out_8347382080481440720[339] = 0;
   out_8347382080481440720[340] = 0;
   out_8347382080481440720[341] = 0;
   out_8347382080481440720[342] = 0;
   out_8347382080481440720[343] = 0;
   out_8347382080481440720[344] = 0;
   out_8347382080481440720[345] = 0;
   out_8347382080481440720[346] = 0;
   out_8347382080481440720[347] = 0;
   out_8347382080481440720[348] = 0;
   out_8347382080481440720[349] = 0;
   out_8347382080481440720[350] = 0;
   out_8347382080481440720[351] = 0;
   out_8347382080481440720[352] = 1;
   out_8347382080481440720[353] = 0;
   out_8347382080481440720[354] = 0;
   out_8347382080481440720[355] = 0;
   out_8347382080481440720[356] = 0;
   out_8347382080481440720[357] = 0;
   out_8347382080481440720[358] = 0;
   out_8347382080481440720[359] = 0;
   out_8347382080481440720[360] = 0;
   out_8347382080481440720[361] = 0;
   out_8347382080481440720[362] = 0;
   out_8347382080481440720[363] = 0;
   out_8347382080481440720[364] = 0;
   out_8347382080481440720[365] = 0;
   out_8347382080481440720[366] = 0;
   out_8347382080481440720[367] = 0;
   out_8347382080481440720[368] = 0;
   out_8347382080481440720[369] = 0;
   out_8347382080481440720[370] = 0;
   out_8347382080481440720[371] = 0;
   out_8347382080481440720[372] = 0;
   out_8347382080481440720[373] = 0;
   out_8347382080481440720[374] = 1;
   out_8347382080481440720[375] = 0;
   out_8347382080481440720[376] = 0;
   out_8347382080481440720[377] = 0;
   out_8347382080481440720[378] = 0;
   out_8347382080481440720[379] = 0;
   out_8347382080481440720[380] = 0;
   out_8347382080481440720[381] = 0;
   out_8347382080481440720[382] = 0;
   out_8347382080481440720[383] = 0;
   out_8347382080481440720[384] = 0;
   out_8347382080481440720[385] = 0;
   out_8347382080481440720[386] = 0;
   out_8347382080481440720[387] = 0;
   out_8347382080481440720[388] = 0;
   out_8347382080481440720[389] = 0;
   out_8347382080481440720[390] = 0;
   out_8347382080481440720[391] = 0;
   out_8347382080481440720[392] = 0;
   out_8347382080481440720[393] = 0;
   out_8347382080481440720[394] = 0;
   out_8347382080481440720[395] = 0;
   out_8347382080481440720[396] = 1;
   out_8347382080481440720[397] = 0;
   out_8347382080481440720[398] = 0;
   out_8347382080481440720[399] = 0;
   out_8347382080481440720[400] = 0;
   out_8347382080481440720[401] = 0;
   out_8347382080481440720[402] = 0;
   out_8347382080481440720[403] = 0;
   out_8347382080481440720[404] = 0;
   out_8347382080481440720[405] = 0;
   out_8347382080481440720[406] = 0;
   out_8347382080481440720[407] = 0;
   out_8347382080481440720[408] = 0;
   out_8347382080481440720[409] = 0;
   out_8347382080481440720[410] = 0;
   out_8347382080481440720[411] = 0;
   out_8347382080481440720[412] = 0;
   out_8347382080481440720[413] = 0;
   out_8347382080481440720[414] = 0;
   out_8347382080481440720[415] = 0;
   out_8347382080481440720[416] = 0;
   out_8347382080481440720[417] = 0;
   out_8347382080481440720[418] = 1;
   out_8347382080481440720[419] = 0;
   out_8347382080481440720[420] = 0;
   out_8347382080481440720[421] = 0;
   out_8347382080481440720[422] = 0;
   out_8347382080481440720[423] = 0;
   out_8347382080481440720[424] = 0;
   out_8347382080481440720[425] = 0;
   out_8347382080481440720[426] = 0;
   out_8347382080481440720[427] = 0;
   out_8347382080481440720[428] = 0;
   out_8347382080481440720[429] = 0;
   out_8347382080481440720[430] = 0;
   out_8347382080481440720[431] = 0;
   out_8347382080481440720[432] = 0;
   out_8347382080481440720[433] = 0;
   out_8347382080481440720[434] = 0;
   out_8347382080481440720[435] = 0;
   out_8347382080481440720[436] = 0;
   out_8347382080481440720[437] = 0;
   out_8347382080481440720[438] = 0;
   out_8347382080481440720[439] = 0;
   out_8347382080481440720[440] = 1;
}
void h_4(double *state, double *unused, double *out_982242475321289129) {
   out_982242475321289129[0] = state[10] + state[13];
   out_982242475321289129[1] = state[11] + state[14];
   out_982242475321289129[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9051687555922707218) {
   out_9051687555922707218[0] = 0;
   out_9051687555922707218[1] = 0;
   out_9051687555922707218[2] = 0;
   out_9051687555922707218[3] = 0;
   out_9051687555922707218[4] = 0;
   out_9051687555922707218[5] = 0;
   out_9051687555922707218[6] = 0;
   out_9051687555922707218[7] = 0;
   out_9051687555922707218[8] = 0;
   out_9051687555922707218[9] = 0;
   out_9051687555922707218[10] = 1;
   out_9051687555922707218[11] = 0;
   out_9051687555922707218[12] = 0;
   out_9051687555922707218[13] = 1;
   out_9051687555922707218[14] = 0;
   out_9051687555922707218[15] = 0;
   out_9051687555922707218[16] = 0;
   out_9051687555922707218[17] = 0;
   out_9051687555922707218[18] = 0;
   out_9051687555922707218[19] = 0;
   out_9051687555922707218[20] = 0;
   out_9051687555922707218[21] = 0;
   out_9051687555922707218[22] = 0;
   out_9051687555922707218[23] = 0;
   out_9051687555922707218[24] = 0;
   out_9051687555922707218[25] = 0;
   out_9051687555922707218[26] = 0;
   out_9051687555922707218[27] = 0;
   out_9051687555922707218[28] = 0;
   out_9051687555922707218[29] = 0;
   out_9051687555922707218[30] = 0;
   out_9051687555922707218[31] = 0;
   out_9051687555922707218[32] = 0;
   out_9051687555922707218[33] = 1;
   out_9051687555922707218[34] = 0;
   out_9051687555922707218[35] = 0;
   out_9051687555922707218[36] = 1;
   out_9051687555922707218[37] = 0;
   out_9051687555922707218[38] = 0;
   out_9051687555922707218[39] = 0;
   out_9051687555922707218[40] = 0;
   out_9051687555922707218[41] = 0;
   out_9051687555922707218[42] = 0;
   out_9051687555922707218[43] = 0;
   out_9051687555922707218[44] = 0;
   out_9051687555922707218[45] = 0;
   out_9051687555922707218[46] = 0;
   out_9051687555922707218[47] = 0;
   out_9051687555922707218[48] = 0;
   out_9051687555922707218[49] = 0;
   out_9051687555922707218[50] = 0;
   out_9051687555922707218[51] = 0;
   out_9051687555922707218[52] = 0;
   out_9051687555922707218[53] = 0;
   out_9051687555922707218[54] = 0;
   out_9051687555922707218[55] = 0;
   out_9051687555922707218[56] = 1;
   out_9051687555922707218[57] = 0;
   out_9051687555922707218[58] = 0;
   out_9051687555922707218[59] = 1;
   out_9051687555922707218[60] = 0;
   out_9051687555922707218[61] = 0;
   out_9051687555922707218[62] = 0;
   out_9051687555922707218[63] = 0;
   out_9051687555922707218[64] = 0;
   out_9051687555922707218[65] = 0;
}
void h_9(double *state, double *unused, double *out_4530119351749384424) {
   out_4530119351749384424[0] = state[10];
   out_4530119351749384424[1] = state[11];
   out_4530119351749384424[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8810497909293116573) {
   out_8810497909293116573[0] = 0;
   out_8810497909293116573[1] = 0;
   out_8810497909293116573[2] = 0;
   out_8810497909293116573[3] = 0;
   out_8810497909293116573[4] = 0;
   out_8810497909293116573[5] = 0;
   out_8810497909293116573[6] = 0;
   out_8810497909293116573[7] = 0;
   out_8810497909293116573[8] = 0;
   out_8810497909293116573[9] = 0;
   out_8810497909293116573[10] = 1;
   out_8810497909293116573[11] = 0;
   out_8810497909293116573[12] = 0;
   out_8810497909293116573[13] = 0;
   out_8810497909293116573[14] = 0;
   out_8810497909293116573[15] = 0;
   out_8810497909293116573[16] = 0;
   out_8810497909293116573[17] = 0;
   out_8810497909293116573[18] = 0;
   out_8810497909293116573[19] = 0;
   out_8810497909293116573[20] = 0;
   out_8810497909293116573[21] = 0;
   out_8810497909293116573[22] = 0;
   out_8810497909293116573[23] = 0;
   out_8810497909293116573[24] = 0;
   out_8810497909293116573[25] = 0;
   out_8810497909293116573[26] = 0;
   out_8810497909293116573[27] = 0;
   out_8810497909293116573[28] = 0;
   out_8810497909293116573[29] = 0;
   out_8810497909293116573[30] = 0;
   out_8810497909293116573[31] = 0;
   out_8810497909293116573[32] = 0;
   out_8810497909293116573[33] = 1;
   out_8810497909293116573[34] = 0;
   out_8810497909293116573[35] = 0;
   out_8810497909293116573[36] = 0;
   out_8810497909293116573[37] = 0;
   out_8810497909293116573[38] = 0;
   out_8810497909293116573[39] = 0;
   out_8810497909293116573[40] = 0;
   out_8810497909293116573[41] = 0;
   out_8810497909293116573[42] = 0;
   out_8810497909293116573[43] = 0;
   out_8810497909293116573[44] = 0;
   out_8810497909293116573[45] = 0;
   out_8810497909293116573[46] = 0;
   out_8810497909293116573[47] = 0;
   out_8810497909293116573[48] = 0;
   out_8810497909293116573[49] = 0;
   out_8810497909293116573[50] = 0;
   out_8810497909293116573[51] = 0;
   out_8810497909293116573[52] = 0;
   out_8810497909293116573[53] = 0;
   out_8810497909293116573[54] = 0;
   out_8810497909293116573[55] = 0;
   out_8810497909293116573[56] = 1;
   out_8810497909293116573[57] = 0;
   out_8810497909293116573[58] = 0;
   out_8810497909293116573[59] = 0;
   out_8810497909293116573[60] = 0;
   out_8810497909293116573[61] = 0;
   out_8810497909293116573[62] = 0;
   out_8810497909293116573[63] = 0;
   out_8810497909293116573[64] = 0;
   out_8810497909293116573[65] = 0;
}
void h_10(double *state, double *unused, double *out_727747743377114058) {
   out_727747743377114058[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_727747743377114058[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_727747743377114058[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2500188153629558271) {
   out_2500188153629558271[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2500188153629558271[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2500188153629558271[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2500188153629558271[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2500188153629558271[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2500188153629558271[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2500188153629558271[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2500188153629558271[7] = 0;
   out_2500188153629558271[8] = 0;
   out_2500188153629558271[9] = 0;
   out_2500188153629558271[10] = 0;
   out_2500188153629558271[11] = 0;
   out_2500188153629558271[12] = 0;
   out_2500188153629558271[13] = 0;
   out_2500188153629558271[14] = 0;
   out_2500188153629558271[15] = 0;
   out_2500188153629558271[16] = 1;
   out_2500188153629558271[17] = 0;
   out_2500188153629558271[18] = 0;
   out_2500188153629558271[19] = 1;
   out_2500188153629558271[20] = 0;
   out_2500188153629558271[21] = 0;
   out_2500188153629558271[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2500188153629558271[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2500188153629558271[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2500188153629558271[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2500188153629558271[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2500188153629558271[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2500188153629558271[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2500188153629558271[29] = 0;
   out_2500188153629558271[30] = 0;
   out_2500188153629558271[31] = 0;
   out_2500188153629558271[32] = 0;
   out_2500188153629558271[33] = 0;
   out_2500188153629558271[34] = 0;
   out_2500188153629558271[35] = 0;
   out_2500188153629558271[36] = 0;
   out_2500188153629558271[37] = 0;
   out_2500188153629558271[38] = 0;
   out_2500188153629558271[39] = 1;
   out_2500188153629558271[40] = 0;
   out_2500188153629558271[41] = 0;
   out_2500188153629558271[42] = 1;
   out_2500188153629558271[43] = 0;
   out_2500188153629558271[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2500188153629558271[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2500188153629558271[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2500188153629558271[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2500188153629558271[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2500188153629558271[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2500188153629558271[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2500188153629558271[51] = 0;
   out_2500188153629558271[52] = 0;
   out_2500188153629558271[53] = 0;
   out_2500188153629558271[54] = 0;
   out_2500188153629558271[55] = 0;
   out_2500188153629558271[56] = 0;
   out_2500188153629558271[57] = 0;
   out_2500188153629558271[58] = 0;
   out_2500188153629558271[59] = 0;
   out_2500188153629558271[60] = 0;
   out_2500188153629558271[61] = 0;
   out_2500188153629558271[62] = 1;
   out_2500188153629558271[63] = 0;
   out_2500188153629558271[64] = 0;
   out_2500188153629558271[65] = 1;
}
void h_12(double *state, double *unused, double *out_578281573732598570) {
   out_578281573732598570[0] = state[0];
   out_578281573732598570[1] = state[1];
   out_578281573732598570[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4032231147890745423) {
   out_4032231147890745423[0] = 1;
   out_4032231147890745423[1] = 0;
   out_4032231147890745423[2] = 0;
   out_4032231147890745423[3] = 0;
   out_4032231147890745423[4] = 0;
   out_4032231147890745423[5] = 0;
   out_4032231147890745423[6] = 0;
   out_4032231147890745423[7] = 0;
   out_4032231147890745423[8] = 0;
   out_4032231147890745423[9] = 0;
   out_4032231147890745423[10] = 0;
   out_4032231147890745423[11] = 0;
   out_4032231147890745423[12] = 0;
   out_4032231147890745423[13] = 0;
   out_4032231147890745423[14] = 0;
   out_4032231147890745423[15] = 0;
   out_4032231147890745423[16] = 0;
   out_4032231147890745423[17] = 0;
   out_4032231147890745423[18] = 0;
   out_4032231147890745423[19] = 0;
   out_4032231147890745423[20] = 0;
   out_4032231147890745423[21] = 0;
   out_4032231147890745423[22] = 0;
   out_4032231147890745423[23] = 1;
   out_4032231147890745423[24] = 0;
   out_4032231147890745423[25] = 0;
   out_4032231147890745423[26] = 0;
   out_4032231147890745423[27] = 0;
   out_4032231147890745423[28] = 0;
   out_4032231147890745423[29] = 0;
   out_4032231147890745423[30] = 0;
   out_4032231147890745423[31] = 0;
   out_4032231147890745423[32] = 0;
   out_4032231147890745423[33] = 0;
   out_4032231147890745423[34] = 0;
   out_4032231147890745423[35] = 0;
   out_4032231147890745423[36] = 0;
   out_4032231147890745423[37] = 0;
   out_4032231147890745423[38] = 0;
   out_4032231147890745423[39] = 0;
   out_4032231147890745423[40] = 0;
   out_4032231147890745423[41] = 0;
   out_4032231147890745423[42] = 0;
   out_4032231147890745423[43] = 0;
   out_4032231147890745423[44] = 0;
   out_4032231147890745423[45] = 0;
   out_4032231147890745423[46] = 1;
   out_4032231147890745423[47] = 0;
   out_4032231147890745423[48] = 0;
   out_4032231147890745423[49] = 0;
   out_4032231147890745423[50] = 0;
   out_4032231147890745423[51] = 0;
   out_4032231147890745423[52] = 0;
   out_4032231147890745423[53] = 0;
   out_4032231147890745423[54] = 0;
   out_4032231147890745423[55] = 0;
   out_4032231147890745423[56] = 0;
   out_4032231147890745423[57] = 0;
   out_4032231147890745423[58] = 0;
   out_4032231147890745423[59] = 0;
   out_4032231147890745423[60] = 0;
   out_4032231147890745423[61] = 0;
   out_4032231147890745423[62] = 0;
   out_4032231147890745423[63] = 0;
   out_4032231147890745423[64] = 0;
   out_4032231147890745423[65] = 0;
}
void h_31(double *state, double *unused, double *out_4597987201325971349) {
   out_4597987201325971349[0] = state[7];
   out_4597987201325971349[1] = state[8];
   out_4597987201325971349[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1286668115565731714) {
   out_1286668115565731714[0] = 0;
   out_1286668115565731714[1] = 0;
   out_1286668115565731714[2] = 0;
   out_1286668115565731714[3] = 0;
   out_1286668115565731714[4] = 0;
   out_1286668115565731714[5] = 0;
   out_1286668115565731714[6] = 0;
   out_1286668115565731714[7] = 1;
   out_1286668115565731714[8] = 0;
   out_1286668115565731714[9] = 0;
   out_1286668115565731714[10] = 0;
   out_1286668115565731714[11] = 0;
   out_1286668115565731714[12] = 0;
   out_1286668115565731714[13] = 0;
   out_1286668115565731714[14] = 0;
   out_1286668115565731714[15] = 0;
   out_1286668115565731714[16] = 0;
   out_1286668115565731714[17] = 0;
   out_1286668115565731714[18] = 0;
   out_1286668115565731714[19] = 0;
   out_1286668115565731714[20] = 0;
   out_1286668115565731714[21] = 0;
   out_1286668115565731714[22] = 0;
   out_1286668115565731714[23] = 0;
   out_1286668115565731714[24] = 0;
   out_1286668115565731714[25] = 0;
   out_1286668115565731714[26] = 0;
   out_1286668115565731714[27] = 0;
   out_1286668115565731714[28] = 0;
   out_1286668115565731714[29] = 0;
   out_1286668115565731714[30] = 1;
   out_1286668115565731714[31] = 0;
   out_1286668115565731714[32] = 0;
   out_1286668115565731714[33] = 0;
   out_1286668115565731714[34] = 0;
   out_1286668115565731714[35] = 0;
   out_1286668115565731714[36] = 0;
   out_1286668115565731714[37] = 0;
   out_1286668115565731714[38] = 0;
   out_1286668115565731714[39] = 0;
   out_1286668115565731714[40] = 0;
   out_1286668115565731714[41] = 0;
   out_1286668115565731714[42] = 0;
   out_1286668115565731714[43] = 0;
   out_1286668115565731714[44] = 0;
   out_1286668115565731714[45] = 0;
   out_1286668115565731714[46] = 0;
   out_1286668115565731714[47] = 0;
   out_1286668115565731714[48] = 0;
   out_1286668115565731714[49] = 0;
   out_1286668115565731714[50] = 0;
   out_1286668115565731714[51] = 0;
   out_1286668115565731714[52] = 0;
   out_1286668115565731714[53] = 1;
   out_1286668115565731714[54] = 0;
   out_1286668115565731714[55] = 0;
   out_1286668115565731714[56] = 0;
   out_1286668115565731714[57] = 0;
   out_1286668115565731714[58] = 0;
   out_1286668115565731714[59] = 0;
   out_1286668115565731714[60] = 0;
   out_1286668115565731714[61] = 0;
   out_1286668115565731714[62] = 0;
   out_1286668115565731714[63] = 0;
   out_1286668115565731714[64] = 0;
   out_1286668115565731714[65] = 0;
}
void h_32(double *state, double *unused, double *out_2627031169915381729) {
   out_2627031169915381729[0] = state[3];
   out_2627031169915381729[1] = state[4];
   out_2627031169915381729[2] = state[5];
   out_2627031169915381729[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1496990048852685879) {
   out_1496990048852685879[0] = 0;
   out_1496990048852685879[1] = 0;
   out_1496990048852685879[2] = 0;
   out_1496990048852685879[3] = 1;
   out_1496990048852685879[4] = 0;
   out_1496990048852685879[5] = 0;
   out_1496990048852685879[6] = 0;
   out_1496990048852685879[7] = 0;
   out_1496990048852685879[8] = 0;
   out_1496990048852685879[9] = 0;
   out_1496990048852685879[10] = 0;
   out_1496990048852685879[11] = 0;
   out_1496990048852685879[12] = 0;
   out_1496990048852685879[13] = 0;
   out_1496990048852685879[14] = 0;
   out_1496990048852685879[15] = 0;
   out_1496990048852685879[16] = 0;
   out_1496990048852685879[17] = 0;
   out_1496990048852685879[18] = 0;
   out_1496990048852685879[19] = 0;
   out_1496990048852685879[20] = 0;
   out_1496990048852685879[21] = 0;
   out_1496990048852685879[22] = 0;
   out_1496990048852685879[23] = 0;
   out_1496990048852685879[24] = 0;
   out_1496990048852685879[25] = 0;
   out_1496990048852685879[26] = 1;
   out_1496990048852685879[27] = 0;
   out_1496990048852685879[28] = 0;
   out_1496990048852685879[29] = 0;
   out_1496990048852685879[30] = 0;
   out_1496990048852685879[31] = 0;
   out_1496990048852685879[32] = 0;
   out_1496990048852685879[33] = 0;
   out_1496990048852685879[34] = 0;
   out_1496990048852685879[35] = 0;
   out_1496990048852685879[36] = 0;
   out_1496990048852685879[37] = 0;
   out_1496990048852685879[38] = 0;
   out_1496990048852685879[39] = 0;
   out_1496990048852685879[40] = 0;
   out_1496990048852685879[41] = 0;
   out_1496990048852685879[42] = 0;
   out_1496990048852685879[43] = 0;
   out_1496990048852685879[44] = 0;
   out_1496990048852685879[45] = 0;
   out_1496990048852685879[46] = 0;
   out_1496990048852685879[47] = 0;
   out_1496990048852685879[48] = 0;
   out_1496990048852685879[49] = 1;
   out_1496990048852685879[50] = 0;
   out_1496990048852685879[51] = 0;
   out_1496990048852685879[52] = 0;
   out_1496990048852685879[53] = 0;
   out_1496990048852685879[54] = 0;
   out_1496990048852685879[55] = 0;
   out_1496990048852685879[56] = 0;
   out_1496990048852685879[57] = 0;
   out_1496990048852685879[58] = 0;
   out_1496990048852685879[59] = 0;
   out_1496990048852685879[60] = 0;
   out_1496990048852685879[61] = 0;
   out_1496990048852685879[62] = 0;
   out_1496990048852685879[63] = 0;
   out_1496990048852685879[64] = 0;
   out_1496990048852685879[65] = 0;
   out_1496990048852685879[66] = 0;
   out_1496990048852685879[67] = 0;
   out_1496990048852685879[68] = 0;
   out_1496990048852685879[69] = 0;
   out_1496990048852685879[70] = 0;
   out_1496990048852685879[71] = 0;
   out_1496990048852685879[72] = 1;
   out_1496990048852685879[73] = 0;
   out_1496990048852685879[74] = 0;
   out_1496990048852685879[75] = 0;
   out_1496990048852685879[76] = 0;
   out_1496990048852685879[77] = 0;
   out_1496990048852685879[78] = 0;
   out_1496990048852685879[79] = 0;
   out_1496990048852685879[80] = 0;
   out_1496990048852685879[81] = 0;
   out_1496990048852685879[82] = 0;
   out_1496990048852685879[83] = 0;
   out_1496990048852685879[84] = 0;
   out_1496990048852685879[85] = 0;
   out_1496990048852685879[86] = 0;
   out_1496990048852685879[87] = 0;
}
void h_13(double *state, double *unused, double *out_1464207722452825035) {
   out_1464207722452825035[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1464207722452825035[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1464207722452825035[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2609377365523092716) {
   out_2609377365523092716[0] = 0;
   out_2609377365523092716[1] = 0;
   out_2609377365523092716[2] = 0;
   out_2609377365523092716[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2609377365523092716[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2609377365523092716[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2609377365523092716[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2609377365523092716[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2609377365523092716[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2609377365523092716[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2609377365523092716[10] = 0;
   out_2609377365523092716[11] = 0;
   out_2609377365523092716[12] = 0;
   out_2609377365523092716[13] = 0;
   out_2609377365523092716[14] = 0;
   out_2609377365523092716[15] = 0;
   out_2609377365523092716[16] = 0;
   out_2609377365523092716[17] = 0;
   out_2609377365523092716[18] = 0;
   out_2609377365523092716[19] = 0;
   out_2609377365523092716[20] = 0;
   out_2609377365523092716[21] = 0;
   out_2609377365523092716[22] = 0;
   out_2609377365523092716[23] = 0;
   out_2609377365523092716[24] = 0;
   out_2609377365523092716[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2609377365523092716[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2609377365523092716[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2609377365523092716[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2609377365523092716[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2609377365523092716[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2609377365523092716[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2609377365523092716[32] = 0;
   out_2609377365523092716[33] = 0;
   out_2609377365523092716[34] = 0;
   out_2609377365523092716[35] = 0;
   out_2609377365523092716[36] = 0;
   out_2609377365523092716[37] = 0;
   out_2609377365523092716[38] = 0;
   out_2609377365523092716[39] = 0;
   out_2609377365523092716[40] = 0;
   out_2609377365523092716[41] = 0;
   out_2609377365523092716[42] = 0;
   out_2609377365523092716[43] = 0;
   out_2609377365523092716[44] = 0;
   out_2609377365523092716[45] = 0;
   out_2609377365523092716[46] = 0;
   out_2609377365523092716[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2609377365523092716[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2609377365523092716[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2609377365523092716[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2609377365523092716[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2609377365523092716[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2609377365523092716[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2609377365523092716[54] = 0;
   out_2609377365523092716[55] = 0;
   out_2609377365523092716[56] = 0;
   out_2609377365523092716[57] = 0;
   out_2609377365523092716[58] = 0;
   out_2609377365523092716[59] = 0;
   out_2609377365523092716[60] = 0;
   out_2609377365523092716[61] = 0;
   out_2609377365523092716[62] = 0;
   out_2609377365523092716[63] = 0;
   out_2609377365523092716[64] = 0;
   out_2609377365523092716[65] = 0;
}
void h_14(double *state, double *unused, double *out_4530119351749384424) {
   out_4530119351749384424[0] = state[10];
   out_4530119351749384424[1] = state[11];
   out_4530119351749384424[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8810497909293116573) {
   out_8810497909293116573[0] = 0;
   out_8810497909293116573[1] = 0;
   out_8810497909293116573[2] = 0;
   out_8810497909293116573[3] = 0;
   out_8810497909293116573[4] = 0;
   out_8810497909293116573[5] = 0;
   out_8810497909293116573[6] = 0;
   out_8810497909293116573[7] = 0;
   out_8810497909293116573[8] = 0;
   out_8810497909293116573[9] = 0;
   out_8810497909293116573[10] = 1;
   out_8810497909293116573[11] = 0;
   out_8810497909293116573[12] = 0;
   out_8810497909293116573[13] = 0;
   out_8810497909293116573[14] = 0;
   out_8810497909293116573[15] = 0;
   out_8810497909293116573[16] = 0;
   out_8810497909293116573[17] = 0;
   out_8810497909293116573[18] = 0;
   out_8810497909293116573[19] = 0;
   out_8810497909293116573[20] = 0;
   out_8810497909293116573[21] = 0;
   out_8810497909293116573[22] = 0;
   out_8810497909293116573[23] = 0;
   out_8810497909293116573[24] = 0;
   out_8810497909293116573[25] = 0;
   out_8810497909293116573[26] = 0;
   out_8810497909293116573[27] = 0;
   out_8810497909293116573[28] = 0;
   out_8810497909293116573[29] = 0;
   out_8810497909293116573[30] = 0;
   out_8810497909293116573[31] = 0;
   out_8810497909293116573[32] = 0;
   out_8810497909293116573[33] = 1;
   out_8810497909293116573[34] = 0;
   out_8810497909293116573[35] = 0;
   out_8810497909293116573[36] = 0;
   out_8810497909293116573[37] = 0;
   out_8810497909293116573[38] = 0;
   out_8810497909293116573[39] = 0;
   out_8810497909293116573[40] = 0;
   out_8810497909293116573[41] = 0;
   out_8810497909293116573[42] = 0;
   out_8810497909293116573[43] = 0;
   out_8810497909293116573[44] = 0;
   out_8810497909293116573[45] = 0;
   out_8810497909293116573[46] = 0;
   out_8810497909293116573[47] = 0;
   out_8810497909293116573[48] = 0;
   out_8810497909293116573[49] = 0;
   out_8810497909293116573[50] = 0;
   out_8810497909293116573[51] = 0;
   out_8810497909293116573[52] = 0;
   out_8810497909293116573[53] = 0;
   out_8810497909293116573[54] = 0;
   out_8810497909293116573[55] = 0;
   out_8810497909293116573[56] = 1;
   out_8810497909293116573[57] = 0;
   out_8810497909293116573[58] = 0;
   out_8810497909293116573[59] = 0;
   out_8810497909293116573[60] = 0;
   out_8810497909293116573[61] = 0;
   out_8810497909293116573[62] = 0;
   out_8810497909293116573[63] = 0;
   out_8810497909293116573[64] = 0;
   out_8810497909293116573[65] = 0;
}
void h_33(double *state, double *unused, double *out_5073345170562244081) {
   out_5073345170562244081[0] = state[16];
   out_5073345170562244081[1] = state[17];
   out_5073345170562244081[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1863888889073125890) {
   out_1863888889073125890[0] = 0;
   out_1863888889073125890[1] = 0;
   out_1863888889073125890[2] = 0;
   out_1863888889073125890[3] = 0;
   out_1863888889073125890[4] = 0;
   out_1863888889073125890[5] = 0;
   out_1863888889073125890[6] = 0;
   out_1863888889073125890[7] = 0;
   out_1863888889073125890[8] = 0;
   out_1863888889073125890[9] = 0;
   out_1863888889073125890[10] = 0;
   out_1863888889073125890[11] = 0;
   out_1863888889073125890[12] = 0;
   out_1863888889073125890[13] = 0;
   out_1863888889073125890[14] = 0;
   out_1863888889073125890[15] = 0;
   out_1863888889073125890[16] = 1;
   out_1863888889073125890[17] = 0;
   out_1863888889073125890[18] = 0;
   out_1863888889073125890[19] = 0;
   out_1863888889073125890[20] = 0;
   out_1863888889073125890[21] = 0;
   out_1863888889073125890[22] = 0;
   out_1863888889073125890[23] = 0;
   out_1863888889073125890[24] = 0;
   out_1863888889073125890[25] = 0;
   out_1863888889073125890[26] = 0;
   out_1863888889073125890[27] = 0;
   out_1863888889073125890[28] = 0;
   out_1863888889073125890[29] = 0;
   out_1863888889073125890[30] = 0;
   out_1863888889073125890[31] = 0;
   out_1863888889073125890[32] = 0;
   out_1863888889073125890[33] = 0;
   out_1863888889073125890[34] = 0;
   out_1863888889073125890[35] = 0;
   out_1863888889073125890[36] = 0;
   out_1863888889073125890[37] = 0;
   out_1863888889073125890[38] = 0;
   out_1863888889073125890[39] = 1;
   out_1863888889073125890[40] = 0;
   out_1863888889073125890[41] = 0;
   out_1863888889073125890[42] = 0;
   out_1863888889073125890[43] = 0;
   out_1863888889073125890[44] = 0;
   out_1863888889073125890[45] = 0;
   out_1863888889073125890[46] = 0;
   out_1863888889073125890[47] = 0;
   out_1863888889073125890[48] = 0;
   out_1863888889073125890[49] = 0;
   out_1863888889073125890[50] = 0;
   out_1863888889073125890[51] = 0;
   out_1863888889073125890[52] = 0;
   out_1863888889073125890[53] = 0;
   out_1863888889073125890[54] = 0;
   out_1863888889073125890[55] = 0;
   out_1863888889073125890[56] = 0;
   out_1863888889073125890[57] = 0;
   out_1863888889073125890[58] = 0;
   out_1863888889073125890[59] = 0;
   out_1863888889073125890[60] = 0;
   out_1863888889073125890[61] = 0;
   out_1863888889073125890[62] = 1;
   out_1863888889073125890[63] = 0;
   out_1863888889073125890[64] = 0;
   out_1863888889073125890[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6048962248150004469) {
  H(in_vec, out_6048962248150004469);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1257180605249194379) {
  err_fun(nom_x, delta_x, out_1257180605249194379);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7197721205927284659) {
  inv_err_fun(nom_x, true_x, out_7197721205927284659);
}
void live_H_mod_fun(double *state, double *out_4220929202088409045) {
  H_mod_fun(state, out_4220929202088409045);
}
void live_f_fun(double *state, double dt, double *out_3310092106447953143) {
  f_fun(state,  dt, out_3310092106447953143);
}
void live_F_fun(double *state, double dt, double *out_8347382080481440720) {
  F_fun(state,  dt, out_8347382080481440720);
}
void live_h_4(double *state, double *unused, double *out_982242475321289129) {
  h_4(state, unused, out_982242475321289129);
}
void live_H_4(double *state, double *unused, double *out_9051687555922707218) {
  H_4(state, unused, out_9051687555922707218);
}
void live_h_9(double *state, double *unused, double *out_4530119351749384424) {
  h_9(state, unused, out_4530119351749384424);
}
void live_H_9(double *state, double *unused, double *out_8810497909293116573) {
  H_9(state, unused, out_8810497909293116573);
}
void live_h_10(double *state, double *unused, double *out_727747743377114058) {
  h_10(state, unused, out_727747743377114058);
}
void live_H_10(double *state, double *unused, double *out_2500188153629558271) {
  H_10(state, unused, out_2500188153629558271);
}
void live_h_12(double *state, double *unused, double *out_578281573732598570) {
  h_12(state, unused, out_578281573732598570);
}
void live_H_12(double *state, double *unused, double *out_4032231147890745423) {
  H_12(state, unused, out_4032231147890745423);
}
void live_h_31(double *state, double *unused, double *out_4597987201325971349) {
  h_31(state, unused, out_4597987201325971349);
}
void live_H_31(double *state, double *unused, double *out_1286668115565731714) {
  H_31(state, unused, out_1286668115565731714);
}
void live_h_32(double *state, double *unused, double *out_2627031169915381729) {
  h_32(state, unused, out_2627031169915381729);
}
void live_H_32(double *state, double *unused, double *out_1496990048852685879) {
  H_32(state, unused, out_1496990048852685879);
}
void live_h_13(double *state, double *unused, double *out_1464207722452825035) {
  h_13(state, unused, out_1464207722452825035);
}
void live_H_13(double *state, double *unused, double *out_2609377365523092716) {
  H_13(state, unused, out_2609377365523092716);
}
void live_h_14(double *state, double *unused, double *out_4530119351749384424) {
  h_14(state, unused, out_4530119351749384424);
}
void live_H_14(double *state, double *unused, double *out_8810497909293116573) {
  H_14(state, unused, out_8810497909293116573);
}
void live_h_33(double *state, double *unused, double *out_5073345170562244081) {
  h_33(state, unused, out_5073345170562244081);
}
void live_H_33(double *state, double *unused, double *out_1863888889073125890) {
  H_33(state, unused, out_1863888889073125890);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
